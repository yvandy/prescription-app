// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bwcSSYqcBXtyPeXvFEu2Rh
// Component: qN9seyViMez1wk
import * as React from "react";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Testimonial from "../../Testimonial"; // plasmic-import: VOSEbsRev_xNj-/component

import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: nGxlWJ9rXiT6sF/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_landing_page_starter.module.css"; // plasmic-import: bwcSSYqcBXtyPeXvFEu2Rh/projectcss
import * as sty from "./PlasmicTestimonialsSection1.module.css"; // plasmic-import: qN9seyViMez1wk/css

export type PlasmicTestimonialsSection1__VariantMembers = {};

export type PlasmicTestimonialsSection1__VariantsArgs = {};
type VariantPropType = keyof PlasmicTestimonialsSection1__VariantsArgs;
export const PlasmicTestimonialsSection1__VariantProps =
  new Array<VariantPropType>();

export type PlasmicTestimonialsSection1__ArgsType = {
  children?: React.ReactNode;
};

type ArgPropType = keyof PlasmicTestimonialsSection1__ArgsType;
export const PlasmicTestimonialsSection1__ArgProps = new Array<ArgPropType>(
  "children"
);

export type PlasmicTestimonialsSection1__OverridesType = {
  root?: p.Flex<"div">;
  freeBox?: p.Flex<"div">;
};

export interface DefaultTestimonialsSection1Props {
  children?: React.ReactNode;
  className?: string;
}

function PlasmicTestimonialsSection1__RenderFunc(props: {
  variants: PlasmicTestimonialsSection1__VariantsArgs;
  args: PlasmicTestimonialsSection1__ArgsType;
  overrides: PlasmicTestimonialsSection1__OverridesType;
  dataFetches?: PlasmicTestimonialsSection1__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <p.Stack
        as={"div"}
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        hasGap={true}
        className={classNames(defaultcss.all, sty.freeBox)}
      >
        {p.renderPlasmicSlot({
          defaultContents: (
            <React.Fragment>
              <Testimonial
                className={classNames("__wab_instance", sty.testimonial__h3Co)}
                slot={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__l6El)}
                    role={"img"}
                    src={
                      "https://www.caa.com/sites/default/files/styles/headshot_500x500/public/speaker-headshots/Morgan_CAAspeakers_Heashot_Web.jpg?itok=WCOhQ1Hj" as const
                    }
                  />
                }
              />

              <Testimonial
                className={classNames("__wab_instance", sty.testimonial__qqPnI)}
                slot={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img___8WwY)}
                    role={"img"}
                    src={
                      "https://tv-fanatic-res.cloudinary.com/iu/s--eXCbHIe1--/t_teaser_wide/cs_srgb,f_auto,fl_strip_profile.lossy,q_auto:420/v1371156342/elaine-benes-picture.png" as const
                    }
                  />
                }
                slot2={"Elaine Benes"}
                slot3={"Editor, Pendant Publishing"}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__msjyz
                  )}
                >
                  {'"Vestibulum lacinia varius habitant dis aenean.'}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__zjgRa
                  )}
                >
                  {
                    'A parturient non ultricies a parturient leo a nascetur at consectetur turpis praesent mus ornare nulla posuere vel parturient."'
                  }
                </div>
              </Testimonial>

              <Testimonial
                className={classNames("__wab_instance", sty.testimonial__mfKx6)}
                slot={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__q06K8)}
                    role={"img"}
                    src={
                      "https://i.pinimg.com/originals/87/d7/7d/87d77d68368fe5361d535b51cc5af09a.jpg" as const
                    }
                  />
                }
                slot2={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__lvFhJ
                    )}
                  >
                    {"Woody Boyd"}
                  </div>
                }
                slot3={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__aFxAn
                    )}
                  >
                    {"Assistant Bartender, Cheers"}
                  </div>
                }
              >
                {
                  '"A ullamcorper etiam gravida a non maecenas ac parturient lectus vestibulum nam."'
                }
              </Testimonial>

              <Testimonial
                className={classNames("__wab_instance", sty.testimonial__rVJmM)}
                slot={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__lzcBs)}
                    role={"img"}
                    src={
                      "https://a1cf74336522e87f135f-2f21ace9a6cf0052456644b80fa06d4f.ssl.cf2.rackcdn.com/images/characters_opt/p-fresh-randall-park.jpg" as const
                    }
                  />
                }
                slot2={"Louis Huang"}
                slot3={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___6WtkG
                    )}
                  >
                    {"Restaurant Owner, Cattleman's Ranch"}
                  </div>
                }
              >
                {
                  '"Purus dis a primis rhoncus blandit velit suspendisse porta at ullamcorper suscipit a scelerisque sed pharetra facilisi vitae."'
                }
              </Testimonial>
            </React.Fragment>
          ),
          value: args.children
        })}
      </p.Stack>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "freeBox"],
  freeBox: ["freeBox"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  freeBox: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicTestimonialsSection1__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicTestimonialsSection1__VariantsArgs;
    args?: PlasmicTestimonialsSection1__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicTestimonialsSection1__Fetches;
  } & Omit<PlasmicTestimonialsSection1__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicTestimonialsSection1__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicTestimonialsSection1__ArgProps,
      internalVariantPropNames: PlasmicTestimonialsSection1__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicTestimonialsSection1__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTestimonialsSection1";
  } else {
    func.displayName = `PlasmicTestimonialsSection1.${nodeName}`;
  }
  return func;
}

export const PlasmicTestimonialsSection1 = Object.assign(
  // Top-level PlasmicTestimonialsSection1 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    freeBox: makeNodeComponent("freeBox"),

    // Metadata about props expected for PlasmicTestimonialsSection1
    internalVariantProps: PlasmicTestimonialsSection1__VariantProps,
    internalArgProps: PlasmicTestimonialsSection1__ArgProps
  }
);

export default PlasmicTestimonialsSection1;
/* prettier-ignore-end */
